{"version":3,"sources":["components/Layout/index.tsx","components/Loader/index.tsx","components/Card/index.tsx","domain/Articles/1_Entities/ArticleEntity.ts","domain/Articles/1_Entities/index.ts","domain/config/const.ts","domain/Articles/4_Infrastructure/ArticleHTTP.ts","domain/Articles/5_UseCases/index.ts","domain/Articles/5_UseCases/ListArticlesUseCase.ts","domain/Articles/4_Infrastructure/index.ts","domain/index.ts","hooks/useDomain.ts","hooks/useHome.ts","pages/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Layout","children","width","minHeight","backgroundColor","display","alignItems","shadow","top","px","position","zIndex","maxWidth","margin","fontSize","py","color","pt","Loader","justifyContent","className","Card","title","image","description","onClick","cursor","transition","_hover","boxSize","objectFit","src","alt","maxHeight","noOfLines","mb","textAlign","ArticleEntity","params","_publishedDate","_title","_abstract","_image","_section","_author","_updatedDate","this","published_date","abstract","section","byline","updated","Date","publishedDate","author","updatedDate","articleEntity","media","apiKey","ArticleHTTP","today","typeList","type","period","fetch","response","json","articles","results","map","item","sort","a","b","getDate","Error","articlesUseCases","repository","_repository","listArticles","article","toJSON","useCases","useDomain","initRun","initState","useState","data","setData","status","setStatus","executeUseCase","run","domain","useEffect","isIdle","isError","isSuccess","isLoading","useHome","selected","setSelected","setToday","searchText","setSearchText","setTypeList","list_articles_use_case","execute","filters","changePeriod","e","target","value","changeSearchText","changeTypeList","selection","onClickCard","clear","filter","text","toLocaleLowerCase","includes","Home","rowGap","columnGap","pb","borderBottomWidth","borderBottomColor","templateColumns","onChange","defaultValue","placeholder","onInput","mt","gap","index","motionPreset","onClose","isOpen","size","mx","flexDirection","as","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e201824e.chunk.js","sourcesContent":["import { Box, Text } from \"@chakra-ui/layout\"\r\n\r\nconst Layout: React.FC = ({children}) => {\r\n    return (\r\n        <Box width=\"100vw\" minHeight=\"100vh\" backgroundColor=\"white\">\r\n            <Box \r\n                width=\"100%\" \r\n                display=\"flex\" \r\n                alignItems=\"center\" \r\n                shadow=\"base\" \r\n                backgroundColor=\"white\" \r\n                top=\"0\" \r\n                px=\"1rem\" \r\n                position=\"sticky\" \r\n                zIndex=\"3\">\r\n                <Box maxWidth=\"1024px\" margin=\"0 auto\">\r\n                    <Text fontSize=\"3xl\" py=\"0.8rem\" color=\"gray.700\">Media Probe</Text>\r\n                </Box>\r\n            </Box>\r\n            <Box maxWidth=\"1024px\"  margin=\"0 auto\" pt=\"1rem\" px=\"0.4rem\">\r\n                {children}\r\n            </Box>\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default Layout;","import { Box } from '@chakra-ui/layout';\r\nimport './index.css';\r\n\r\nconst Loader: React.FC = () => {\r\n    return (\r\n        <Box display=\"flex\" justifyContent=\"center\" width=\"100%\" py=\"1.2rem\">\r\n            <div className=\"lds-ripple\">\r\n                <div />\r\n                <div />\r\n            </div>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Loader;","import { Box, Text } from \"@chakra-ui/layout\";\r\nimport { Image } from \"@chakra-ui/react\"\r\n\r\ninterface ICard {\r\n    title: string;\r\n    image: string;\r\n    description: string;\r\n    onClick(): void;\r\n};\r\n\r\nconst Card: React.FC<ICard> = ({\r\n    title,\r\n    image,\r\n    description,\r\n    onClick\r\n}) => {\r\n    return (\r\n        <Box \r\n            onClick={onClick}\r\n            shadow=\"base\" \r\n            display=\"flex\" \r\n            cursor=\"pointer\" \r\n            transition=\"all 0.1s ease-in\" \r\n            _hover={{shadow: 'md', backgroundColor: 'gray.50'}}>\r\n            <Image\r\n                boxSize=\"150px\"\r\n                objectFit=\"cover\"\r\n                src={image}\r\n                alt={title}\r\n            />\r\n            <Box px=\"1.2rem\" py=\"0.2rem\" maxHeight=\"150px\">\r\n                <Text fontSize=\"xl\" noOfLines={2} mb=\"0.4rem\">{title}</Text>\r\n                <Text fontSize=\"sm\" noOfLines={3} textAlign='justify' >{description}</Text>\r\n            </Box>\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default Card;","export default class ArticleEntity {\r\n    private _publishedDate: string;\r\n    private _title: string;\r\n    private _abstract: string;\r\n    private _image: string;\r\n    private _section: string;\r\n    private _author: string;\r\n    private _updatedDate: string;\r\n\r\n    constructor(params: any) {\r\n        this._publishedDate = params.published_date;\r\n        this._title = params.title;\r\n        this._abstract = params.abstract;\r\n        this._image = params.image;\r\n        this._section = params.section;\r\n        this._author = params.byline;\r\n        this._updatedDate = params.updated;\r\n    }\r\n\r\n    public getDate(): Date {\r\n        return new Date(`ISO ${this._publishedDate}`);\r\n    }\r\n\r\n    public toJSON() {\r\n        return {\r\n            title: this._title,\r\n            publishedDate: this._publishedDate,\r\n            abstract: this._abstract,\r\n            image: this._image,\r\n            section: this._section,\r\n            author: this._author,\r\n            updatedDate: this._updatedDate\r\n        }\r\n    }\r\n}","import ArticleEntity from \"./ArticleEntity\";\r\n\r\nconst articleEntity = (params: any) => {\r\n    return new ArticleEntity({\r\n        published_date: params.published_date,\r\n        title: params.title,\r\n        abstract: params.abstract,\r\n        image: params.media[0]?.[\"media-metadata\"]?.[2]?.[\"url\"] ?? \"http://placekitten.com/g/150/150\",\r\n        section: params.section,\r\n        byline: params.byline,\r\n        updated: params.updated\r\n    })\r\n};\r\n\r\nexport {\r\n    articleEntity\r\n}","export const apiKey = \"5C1yfD0LP16tMrJ3sUlxCYuI0wlubg03\";","import { articleEntity } from \"../1_Entities\";\r\nimport ArticleEntity from \"../1_Entities/ArticleEntity\";\r\nimport { IArticleRepository } from \"../3_Repository/IArticleRepository\";\r\nimport { apiKey } from \"../../config/const\";\r\n\r\nexport default class ArticleHTTP implements IArticleRepository {\r\n    public async listArticles(today = false, typeList = \"byDate\"): Promise<ArticleEntity[]> {\r\n        const type = typeList === \"byDate\" ? 'emailed' : 'viewed';\r\n        const period = today ? 1 : 7;\r\n        const response = await fetch(`https://api.nytimes.com/svc/mostpopular/v2/${type}/${period}.json?api-key=${apiKey}`);\r\n        const json = await response.json();\r\n        const articles: ArticleEntity[] = json.results\r\n            .map((item: any) => {\r\n                return articleEntity(item);\r\n            });\r\n        return articles.sort((a: any, b: any) => b.getDate() - a.getDate())\r\n    }\r\n    \r\n    public filterArticles(params: any): Promise<ArticleEntity[]> {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n}","import { articleHttp } from \"../4_Infrastructure\";\r\nimport ListArticleUseCase from \"./ListArticlesUseCase\";\r\n\r\nconst listArticlesUseCase = () => new ListArticleUseCase(articleHttp());\r\n\r\nconst articlesUseCases = {\r\n    'list_articles_use_case': listArticlesUseCase()\r\n};\r\n\r\nexport {\r\n    articlesUseCases\r\n};","import { IArticleRepository } from \"../3_Repository/IArticleRepository\";\r\n\r\nexport default class ListArticleUseCase {\r\n    private _repository: IArticleRepository;\r\n\r\n    constructor(repository: IArticleRepository) {\r\n        this._repository = repository;\r\n    }\r\n\r\n    public async execute(today?: boolean, typeList?: string) {\r\n        const articles = await this._repository.listArticles(!!today, typeList);\r\n        return articles.map(article => article.toJSON());\r\n    }\r\n}","import ArticleHTTP from \"./ArticleHTTP\";\r\n\r\nconst articleHttp = () => new ArticleHTTP();\r\n\r\nexport {\r\n    articleHttp\r\n}","import { articlesUseCases } from './Articles/5_UseCases';\r\n\r\nconst useCases = {\r\n    ...articlesUseCases,\r\n}\r\n\r\nexport default useCases;","import { useEffect, useState } from 'react';\r\nimport domain from '../domain';\r\n\r\nexport type StatusType = \"idle\" | \"pending\" | \"success\" | \"error\"; \r\nexport type DomainType = typeof domain;\r\nexport type RunType = (domain: DomainType) => Promise<any>;\r\n\r\ninterface IUseDomain {\r\n    initRun? : RunType;\r\n    initState?: any;\r\n}\r\n\r\nconst useDomain = ({initRun, initState = null}: IUseDomain = {}) => {\r\n    const [data, setData] = useState(initState);\r\n    const [status, setStatus] = useState<StatusType>(\"idle\")\r\n    \r\n    const executeUseCase = async (run: RunType) => {\r\n        let response = null;\r\n        setStatus(\"pending\");\r\n        try {\r\n            response = await run(domain);\r\n            if (response) {\r\n                setData(response);\r\n                setStatus(\"success\");\r\n            } else {\r\n                setData(null);\r\n                setStatus(\"error\");\r\n            }\r\n        } catch (e) {\r\n            setData(null);\r\n            setStatus(\"error\");\r\n        }\r\n        return { data }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (initRun) executeUseCase(initRun);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return {\r\n        isIdle: status === \"idle\",\r\n        isError: status === \"error\",\r\n        isSuccess: status === \"success\",\r\n        isLoading: status === \"pending\",\r\n        data,\r\n        run: executeUseCase\r\n    }\r\n\r\n}\r\n\r\nexport default useDomain;","import useDomain from \"./useDomain\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useHome = () => {\r\n    const {\r\n        data,\r\n        isLoading,\r\n        isError,\r\n        isSuccess,\r\n        run\r\n    } = useDomain({\r\n        initState: []\r\n    });\r\n    const [selected, setSelected] = useState<any>(null);\r\n    const [today, setToday] = useState(false);\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [typeList, setTypeList] = useState<string>(\"byDate\");\r\n\r\n    const onClickCard = (item: any) => {\r\n        return () => {\r\n            setSelected(item);\r\n        }\r\n    }\r\n\r\n    const clearCard = () => setSelected(null);\r\n\r\n    const changePeriod = (e: any) => {\r\n        setToday(e.target?.value === \"1\")\r\n    };\r\n\r\n    const changeSearchText = (e: any) => {\r\n        setSearchText(e.target?.value);\r\n    }\r\n\r\n    const changeTypeList = (e: any) => {\r\n        setTypeList(e.target?.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        run((domain) => domain.list_articles_use_case.execute(today, typeList));\r\n        // eslint-disable-next-line\r\n    }, [today, typeList]);\r\n\r\n    return {\r\n        filters: {\r\n            changePeriod,\r\n            changeSearchText,\r\n            changeTypeList,\r\n            searchText,\r\n            typeList,\r\n            today,\r\n        },\r\n        selection: {\r\n            onClickCard,\r\n            clear: clearCard,\r\n            item: selected\r\n        },\r\n        isLoading,\r\n        isError,\r\n        isSuccess,\r\n        data:  data?.filter((item: any) => {\r\n            if (searchText === \"\") {\r\n                return true;\r\n            }\r\n            const text = searchText.toLocaleLowerCase();\r\n            return (\r\n                item.author.toLocaleLowerCase().includes(text) \r\n                || item.title.toLocaleLowerCase().includes(text)\r\n            );\r\n        })\r\n    }\r\n}\r\n\r\nexport default useHome;","import { Box, Grid, Text } from \"@chakra-ui/layout\";\r\nimport Layout from \"../components/Layout\";\r\nimport Loader from \"../components/Loader\";\r\nimport Card from \"../components/Card\";\r\nimport { Image, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, Select } from \"@chakra-ui/react\";\r\nimport useHome from \"../hooks/useHome\";\r\n\r\nconst Home = () => {\r\n    const {\r\n        data,\r\n        filters,\r\n        selection,\r\n        isLoading,\r\n        isError,\r\n        isSuccess,\r\n    } = useHome();\r\n\r\n    return (\r\n        <Layout>\r\n            <Grid rowGap=\"0.2rem\" columnGap=\"0.8rem\" pb=\"0.8rem\" mb=\"0.8rem\" borderBottomWidth=\"1px\" borderBottomColor=\"gray.100\" \r\n                templateColumns={[\r\n                    \"repeat(1, 1fr)\",\r\n                    \"repeat(1, 1fr)\",\r\n                    \"repeat(3, 1fr)\",\r\n                    \"repeat(3, 1fr)\",\r\n                ]}>\r\n                <Select onChange={filters.changeTypeList} defaultValue={filters.typeList}>\r\n                    <option value=\"byDate\">Por orden</option>\r\n                    <option value=\"byViews\">Más visto</option>\r\n                </Select>\r\n                <Input value={filters.searchText} placeholder=\"Buscar por artículo o autor\" onInput={filters.changeSearchText} />\r\n                <Select onChange={filters.changePeriod} defaultValue={filters.today ? \"1\" : \"7\"}>\r\n                    <option value=\"7\">Últimos 7 días</option>\r\n                    <option value=\"1\">Último día</option>\r\n                </Select>\r\n            </Grid>\r\n            {\r\n                isLoading &&\r\n                <Box mt=\"4.8rem\">\r\n                    <Loader />\r\n                </Box>\r\n            }\r\n            {\r\n                isError &&\r\n                <Box backgroundColor=\"red.500\" color=\"white\" mt=\"2.4rem\" py=\"1.2rem\" textAlign=\"center\" width=\"100%\">\r\n                    Error al cargar los datos favor de actualizar\r\n                </Box>\r\n            }\r\n            {\r\n                isSuccess &&\r\n                <Grid gap=\"1.2rem\" pb=\"1.2rem\"\r\n                templateColumns={[\r\n                    \"repeat(1, 1fr)\",\r\n                    \"repeat(1, 1fr)\",\r\n                    \"repeat(2, 1fr)\",\r\n                    \"repeat(2, 1fr)\",\r\n                ]}>\r\n                    {\r\n                        data?.map((item: any, index: number) => {\r\n                            return (\r\n                                <Card\r\n                                    onClick={selection.onClickCard(item)}\r\n                                    description={item.abstract} \r\n                                    title={item.title}\r\n                                    image={item.image}\r\n                                    key={`index_${index}`} />\r\n                            )\r\n                        })\r\n                    }\r\n                </Grid>\r\n            }\r\n            <Modal motionPreset=\"slideInBottom\" onClose={selection.clear} isOpen={!!selection.item} size='xl'>\r\n                <ModalOverlay />\r\n                <ModalContent pb={5} >\r\n                    <ModalHeader textAlign='center' mx=\"1.6rem\">{selection.item?.title}</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>\r\n                        <Box display=\"flex\" flexDirection=\"row\">\r\n                            <Image\r\n                                boxSize=\"250px\"\r\n                                objectFit=\"cover\"\r\n                                src={selection.item?.image}\r\n                                alt={selection.item?.title}\r\n                            />\r\n                            <Box display=\"flex\" flexDirection=\"column\">\r\n                                <Text fontSize=\"sm\"textAlign='justify' px=\"1.6rem\">{selection.item?.abstract}</Text>\r\n                                \r\n                                <Box mt=\"auto\" display=\"flex\" flexDirection=\"column\">\r\n                                    <Text fontSize=\"xs\"textAlign='right' px=\"1.6rem\" width=\"100%\" as=\"i\">Feha de publicación: {selection.item?.publishedDate}</Text>\r\n                                    <Text fontSize=\"xs\"textAlign='right' px=\"1.6rem\" width=\"100%\" as=\"i\">{selection.item?.author}</Text>\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                    </ModalBody>\r\n                </ModalContent>\r\n            </Modal>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default Home;","import { Box, ChakraProvider } from \"@chakra-ui/react\"\nimport './App.css';\nimport Home from './pages/Home';\n\nconst App = () => {\n  return (\n    <ChakraProvider>\n      <Box backgroundColor=\"gray.50\">\n        <Home />\n      </Box>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}